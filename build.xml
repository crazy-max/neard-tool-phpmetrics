<?xml version="1.0" encoding="UTF-8"?>
<project name="neard-tool-phpmetrics" basedir=".">
  
  <dirname property="project.basedir" file="${ant.file.neard-tool-phpmetrics}"/>
  <property name="root.dir" location="${project.basedir}/.."/>
  <property name="build.properties" value="${project.basedir}/build.properties"/>
  <property file="${build.properties}"/>
  
  <!-- Neard dev -->
  <property name="neard-dev.path" location="${root.dir}/neard-dev"/>
  <fail unless="neard-dev.path" message="Project 'neard-dev' not found in ${neard-dev.path}"/>
  <echo message="Neard dev found in ${neard-dev.path}" level="debug"/> 
  
  <!-- Import build-commons.xml -->
  <import file="${neard-dev.path}/build/build-commons.xml"/>
  <!-- Import build-bundle.xml -->
  <import file="${neard-dev.path}/build/build-bundle.xml"/>
  
  <target name="release.build">
    <basename property="bundle.folder" file="${bundle.path}"/>
    <replaceproperty src="bundle.folder" dest="bundle.version" replace="${bundle.name}" with=""/>
    
    <getmoduleuntouched name="${bundle.name}" version="${bundle.version}" propSrcDest="bundle.srcdest" propSrcFilename="bundle.srcfilename"/>
    <propertyregex property="bundle.srcbasename" input="${bundle.srcfilename}" regexp="(.*)\.(.*)" select="\1"/>
    <condition property="bundle.srcfinal" value="${bundle.srcdest}/${bundle.srcbasename}"><available file="${bundle.srcdest}/${bundle.srcbasename}" type="dir"/></condition>
    <fail unless="bundle.srcfinal" message="Main folder not found"/>
    <assertfile file="${bundle.srcfinal}/bin/phpmetrics"/>
    
    <!-- Temp copy -->
    <copy todir="${bundle.srcfinal}" overwrite="true">
      <fileset dir="${bundle.path}" defaultexcludes="yes"/>
    </copy>
    
    <!-- Composer -->
    <if>
      <available file="${bundle.srcfinal}/composer.json" type="file"/>
      <then>
        <composer dir="${bundle.srcfinal}">
          <args>
            <arg value="update"/>
            <arg value="--no-dev"/>
            <arg value="--prefer-lowest"/>
            <arg value="--optimize-autoloader"/>
          </args>
        </composer>
      </then>
    </if>
    
    <delete dir="${bundle.tmp.prep.path}/${bundle.folder}"/>
    <mkdir dir="${bundle.tmp.prep.path}/${bundle.folder}"/>
    <copy todir="${bundle.tmp.prep.path}/${bundle.folder}" overwrite="true">
      <fileset dir="${bundle.srcfinal}"/>
    </copy>
    <copy todir="${bundle.tmp.prep.path}/${bundle.folder}" overwrite="true">
      <fileset dir="${bundle.path}" defaultexcludes="yes"/>
    </copy>
  </target>
</project>
